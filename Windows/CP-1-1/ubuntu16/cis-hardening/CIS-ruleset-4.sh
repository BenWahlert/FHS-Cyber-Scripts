#!/bin/sh
#
# "Copyright 2019 Canonical Limited. All rights reserved."
#
#--------------------------------------------------------

. ./ruleset-tools.sh

########################## SUPPORT FUNCTIONS #################################
AUDIT_CONF='/etc/audit/auditd.conf'
AUDIT_RULE='/etc/audit/audit.rules'
AUDIT_RULE_DIR='/etc/audit/rules.d'
SRC_DIR='./4.1.4-18'
SYSLOG_CONF=/etc/rsyslog.d/99-Canonical_Ubuntu_CIS.conf

install_auditd()
{
    apt-get install auditd -y
}

install_rsyslog()
{
    apt-get install rsyslog -y
}

reload_svc_conf()
{
    systemctl kill auditd -s SIGHUP # Forces configuration reload
}

# Print banner based on audit file comment
print_audit_banner()
{
    local aufpath="$@"
    local text=$(sed -n '{ 6s/^# // p }' ${aufpath})
    print_rule_banner "${text}"
}

# Generate audit file 4.1.12.rules from list of privileged files
generate_file-4.1.12()
{
    echo "#"
    echo "# Copyright 2019 Canonical Limited. All rights reserved."
    echo "#"
    echo "#--------------------------------------------------------"
    echo
    echo "# Ensure use of privileged commands is collected"
    df --local -P | awk {'if (NR!=1) print $6'} |\
     xargs -I '{}' find '{}' -xdev \( -perm -4000 -o -perm -2000 \) -type f |\
     awk '{print "-a always,exit -F path=" $1 " -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged" }'
}

########################## RULE FUNCTIONS #################################

#4.1.1.1 Ensure audit log storage size is configured (Not scored)

#4.1.1.2 Ensure system is disabled when audit logs are fulla (Scored)
rule-4.1.1.2()
{
    echo
    echo "Ensure system is disabled when audit logs are full"
    sed -i 's/\(space_left_action[[:space:]]*=[[:space:]]*\).*$/\1email/' $AUDIT_CONF
    sed -i 's/\(action_mail_acct[[:space:]]*=[[:space:]]*\).*$/\1root/' $AUDIT_CONF
    sed -i 's/\(admin_space_left_action[[:space:]]*=[[:space:]]*\).*$/\1halt/' $AUDIT_CONF
    reload_svc_conf
}

#4.1.1.3 Ensure audit logs are not automatically deleted
rule-4.1.1.3()
{
    echo
    echo "Ensure audit logs are not automatically deleted"
    sed -i 's/\(max_log_file_action[[:space:]]*=[[:space:]]*\).*$/\1keep_logs/' $AUDIT_CONF
    reload_svc_conf
}

#4.1.2 Ensure auditd service is enabled
rule-4.1.2()
{
    echo
    echo Ensure auditd service is enabled
    dpkg -s auditd || apt-get install auditd -y
    systemctl enable auditd && systemctl start auditd
}

#4.1.3 Ensure auditing for processes that start prior to auditd is enabled
rule-4.1.3()
{
    echo
    echo "Ensure auditing for processes that start prior to auditd is enabled"
    grep 'GRUB_CMDLINE_LINUX=' /etc/default/grub | grep '\baudit=[0-9]\b' &>/dev/null
    if [ $? -eq 0 ]; then
        sed -i 's/\(\baudit=\)[0-9]\b/audit=1/g' /etc/default/grub
    else
        sed -i -E 's/GRUB_CMDLINE_LINUX="[^"]+/\0 audit=1/' /etc/default/grub
        sed -i -E 's/(GRUB_CMDLINE_LINUX=")"/\1audit=1"/' /etc/default/grub
    fi
    update-grub
}

# Handles rules 4.1.4 to 4.1.18
# audit rules are all in the $SRC_DIR (except for 4.1.12 which is generated by
# generate_rule-4.1.12 function).
# This function copy the audit rules to the /etc/audit/rules.d directory
# and invoke the augenrules --load script to take care of the rest
rule-4.1.4-18()
{
    # 4.1.12 must be generated
    # Generation is done into the audit rules dir due to snaps being mounted
    # into read-only filesystems.
    generate_file-4.1.12 > ${AUDIT_RULE_DIR}/CIS-4.1.12.rules

    # Iterate over files and copy respective files to correct dir
    # Also prints the banner
    for rnum in `seq 4 18`; do
        local rfile=${SRC_DIR}/CIS-4.1."${rnum}".rules
        if [ ${rnum} -ne 12 ]; then
            cp ${rfile} ${AUDIT_RULE_DIR}
        fi
        print_audit_banner ${AUDIT_RULE_DIR}/CIS-4.1."${rnum}".rules
    done

    # Make audit tool merge rules files into /etc/audit/audit.rules
    # and load the latter file into the audit subsystem
    augenrules --load
}

#4.2.1.1 Ensure rsyslog Service is enabled (Scored)
rule-4.2.1.1()
{
    echo
    echo "Ensure rsyslog Service is enabled"
    dpkg -s rsyslog || apt-get install rsyslog -y
    systemctl enable rsyslog && systemctl start rsyslog
}

#4.2.1.2 Ensure logging is configured (Not Scored)

#4.2.1.3 Ensure rsyslog default file permissions configured (Scored)
rule-4.2.1.3()
{
    echo
    echo "Ensure rsyslog default file permissions configured"
    echo '$FileCreateMode 0640' >> $SYSLOG_CONF
    systemctl restart rsyslog
}

#4.2.1.4 Ensure rsyslog is configured to send logs to a remote log host (Scored)
rule-4.2.1.4()
{
    local remote_host=`read_usr_param remote_log_server`

    echo
    echo "Ensure rsyslog is configured to send logs to a remote log host"
    echo "*.* @@$remote_host" >> $SYSLOG_CONF
    systemctl restart rsyslog
}

#4.2.1.5 Ensure remote rsyslog messages are only accepted on designated log hosts. (Not Scored)

#4.2.3 Ensure rsyslog or syslog-ng is installed (Scored)
rule-4.2.3()
{
    echo
    echo "Ensure rsyslog or syslog-ng is installed"
    apt-get install rsyslog -y
}

#4.2.4 Ensure permissions on all logfiles are configured (Scored)
rule-4.2.4()
{
    echo
    echo "Ensure permissions on all logfiles are configured"
    chmod -R g-wx,o-rwx /var/log/*
}

#4.3 Ensure logrotate is configured (Not scored)
service auditd reload
execute_ruleset-4()
{
    local -A rulehash
    # Execute 4.2.3 first since it install rsyslog if not installed already
    local common="4.2.3 4.2.1.1 4.2.1.3 4.2.1.4 4.2.4"
    # all audit rules depend on auditd being installed, so do the installation
    install_auditd
    # all syslog rules depend on rsyslog being installed, so do the installation
    install_rsyslog

    rulehash[lvl1_server]=$common
    rulehash[lvl2_server]="${rulehash[lvl1_server]}"" 4.1.1.2 4.1.1.3 4.1.2 4.1.3\
        4.1.4-18"
    rulehash[lvl1_workstation]=$common
    rulehash[lvl2_workstation]="${rulehash[lvl1_workstation]}"" 4.1.1.2 4.1.1.3\
        4.1.2 4.1.3 4.1.4-18"

    do_execute_rules ${rulehash[$1]}
}
